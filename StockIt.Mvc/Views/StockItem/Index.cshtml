@using StockIt.Core.Repositories.Stock;
@model StockIt.Mvc.Models.RecievedStockItem

@{
    ViewData["Title"] = "Stock It";
}

<h1>Create</h1>

<h4>TemporaryStockItem</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Viewewewew">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Barcode" class="control-label"></label>
                <input asp-for="Barcode" class="form-control" />
                <span asp-validation-for="Barcode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActionType" class="control-label"></label>
                <select asp-for="ActionType" class="form-select" asp-items="Html.GetEnumSelectList<StockAction>()">
                    <option selected="selected" value="">Please select</option>
                </select>
                <span asp-validation-for="ActionType" class="text-danger" />
            </div>
            <div class="form-group">
                <label asp-for="LocationId" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <select asp-for="LocationId" asp-items="@Model.LocationList"></select>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
